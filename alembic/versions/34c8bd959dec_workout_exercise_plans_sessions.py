"""workout_exercise_plans_sessions

Revision ID: 34c8bd959dec
Revises: 07185670e2c8
Create Date: 2025-06-07 12:15:17.090525

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '34c8bd959dec'
down_revision: Union[str, None] = '07185670e2c8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('workout_plans',
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('comments', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_exercise_plans',
    sa.Column('order_in_plan', sa.Integer(), nullable=False),
    sa.Column('target_reps', sa.Integer(), nullable=False),
    sa.Column('target_sets', sa.Integer(), nullable=False),
    sa.Column('target_weights', sa.Integer(), nullable=False),
    sa.Column('target_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=255), nullable=True),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plans.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exercise_id', 'workout_plan_id', name='unique_exercise_plan')
    )
    op.create_table('workout_plan_schedules',
    sa.Column('start_at', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('remind_before_minutes', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workout_plan_schedules_end_time'), 'workout_plan_schedules', ['end_time'], unique=False)
    op.create_index(op.f('ix_workout_plan_schedules_start_at'), 'workout_plan_schedules', ['start_at'], unique=True)
    op.create_table('workout_sessions',
    sa.Column('title', sa.String(length=100), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('ended_at', sa.DateTime(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('session_comments', sa.String(length=255), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['workout_plan_schedules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plans.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_session_results',
    sa.Column('reps_achieved', sa.Integer(), nullable=False),
    sa.Column('sets_achieved', sa.Integer(), nullable=False),
    sa.Column('weights_achieved', sa.Float(), nullable=False),
    sa.Column('total_weight_lifted', sa.Float(), nullable=True),
    sa.Column('workout_exercise_plan_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
    sa.Column('workout_session_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['workout_exercise_plan_id'], ['workout_exercise_plans.id'], ),
    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plans.id'], ),
    sa.ForeignKeyConstraint(['workout_session_id'], ['workout_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_session_results')
    op.drop_table('workout_sessions')
    op.drop_index(op.f('ix_workout_plan_schedules_start_at'), table_name='workout_plan_schedules')
    op.drop_index(op.f('ix_workout_plan_schedules_end_time'), table_name='workout_plan_schedules')
    op.drop_table('workout_plan_schedules')
    op.drop_table('workout_exercise_plans')
    op.drop_table('workout_plans')
    # ### end Alembic commands ###

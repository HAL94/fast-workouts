"""exercise_category_many_to_many_relationship

Revision ID: 07185670e2c8
Revises: efdc60be6e59
Create Date: 2025-06-06 17:21:19.444841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '07185670e2c8'
down_revision: Union[str, None] = 'efdc60be6e59'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('muscle_groups',
    sa.Column('muscle_target', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('muscle_target')
    )
    op.create_table('exercises',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('is_custom', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('exercise_categories',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.PrimaryKeyConstraint('exercise_id', 'category_id', 'id'),
    sa.UniqueConstraint('exercise_id', 'category_id', name='unique_exercise_category')
    )
    op.create_table('exercise_muscle_groups',
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('muscle_group_id', sa.Integer(), nullable=False),
    sa.Column('is_primary_muscle', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['muscle_group_id'], ['muscle_groups.id'], ),
    sa.PrimaryKeyConstraint('exercise_id', 'muscle_group_id', 'id'),
    sa.UniqueConstraint('exercise_id', 'muscle_group_id', name='unique_exercise_muscle_group')
    )
    op.add_column('users', sa.Column('full_name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('age', sa.Integer(), nullable=True))
    op.drop_index(op.f('ix_users_id'), table_name='users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_column('users', 'age')
    op.drop_column('users', 'full_name')
    op.drop_table('exercise_muscle_groups')
    op.drop_table('exercise_categories')
    op.drop_table('exercises')
    op.drop_table('muscle_groups')
    op.drop_table('categories')
    # ### end Alembic commands ###
